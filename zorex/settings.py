"""
Django settings for zorex project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants as messages
import json

with open('/etc/zorex_config.json') as config_file:
    config = json.load(config_file)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
DEBUG =bool(int(config['DEBUG']))

ALLOWED_HOSTS = [ config['ALLOWED_HOST1'] , config['ALLOWED_HOST2'] , config['ALLOWED_HOST3'] ]
CSRF_TRUSTED_ORIGINS = ['https://zorex.com.au', 'https://zorex.rmtelecom.com.au']
CSRF_COOKIE_AGE = 31449600
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'

X_FRAME_OPTIONS = "ALLOWALL"
# XS_SHARING_ALLOWED_METHODS = ['POST','GET','OPTIONS', 'PUT', 'DELETE']

# Application definition

INSTALLED_APPS = [
    'account',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'frontend',
    'customer',
    'scheduler',
    'invoicing',
    'subscription',
    'gear',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'account.middleware.OneSessionPerUserMiddleware',
]

ROOT_URLCONF = 'zorex.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'zorex.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config['DB_NAME'],
        'USER': config['DB_USER'],
        'PASSWORD': config['DB_PASSWORD'],
        'HOST': config['DB_HOST'],
        'PORT': config['DB_PORT'],
        'TIME_ZONE': 'UTC',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Australia/Sydney'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Media Files Location
MEDIA_URL = '/files/'
MEDIA_ROOT = BASE_DIR / 'uploads'
ACCOUNT_ROOT = MEDIA_ROOT / 'account'

# Email configurations:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_SSL = True
EMAIL_HOST = config['EMAIL_HOST']
EMAIL_HOST_USER = config['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = config['EMAIL_HOST_PASSWORD']
EMAIL_PORT = 465
EMAIL_PORT_IMAP = 993
EMAIL_NO_REPLY = config['EMAIL_NO_REPLY']
EMAIL_INVOICING_EMAIL = config['EMAIL_INVOICING_EMAIL']

FILE_UPLOAD_HANDLERS = [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
]

AUTH_USER_MODEL = 'account.Account'


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.AllowAllUsersModelBackend',
    'account.backends.CaseInsensitiveModelBackend'
)

MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-error',
}

ADMIN_MOBILE_NUMBER = config['ADMIN_NUMBER']
FILE_UPLOAD_PERMISSIONS = 0o664
FILE_UPLOAD_MAX_MEMORY_SIZE =   143000000
TEMP = BASE_DIR / 'uploads/temp'
DATA_UPLOAD_MAX_MEMORY_SIZE =   71500000


LOGIN_URL = '/account/login/'
APPEND_SLASH = True

GOOGLE_RECAPTCHA_SITE_KEY = config['GOOGLE_RECAPTCHA_SITE_KEY']
GOOGLE_RECAPTCHA_SECRET_KEY = config['GOOGLE_RECAPTCHA_SECRET_KEY']
DOMAIN_NAME = config['DOMAIN_NAME']
PROTOCOL = config['PROTOCOL']

# PAYPAL
PAYPAL_DOMAIN = config['PAYPAL_DOMAIN']
PAYPAL_CID = config['PAYPAL_CID']
PAYPAL_SECRET = config['PAYPAL_SECRET']
PAYPAL_PRODUCT_ID = config['PAYPAL_PRODUCT_ID']
PAYPAL_RETURNURL = config['PAYPAL_RETURNURL']
PAYPAL_CANCELURL = config['PAYPAL_CANCELURL']


